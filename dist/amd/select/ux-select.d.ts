import { ViewResources, View } from 'aurelia-templating';
import { BindingEngine } from 'aurelia-binding';
import { StyleEngine } from '../styles/style-engine';
import { Themable } from '../styles/themable';
export declare class UxSelect implements Themable {
    resources: ViewResources;
    private styleEngine;
    private bindingEngine;
    private defaultMatcher;
    nativeMode: boolean;
    matcher: (a: any, b: any) => boolean;
    textProperty: string;
    theme: any;
    options: any[];
    value: any;
    disabled: boolean;
    stopPropagation: boolean;
    id: number;
    index: number;
    expanded: boolean;
    view: View;
    ulElement: HTMLUListElement;
    selectElement: HTMLSelectElement;
    itemTemplate: HTMLDivElement;
    private isAttached;
    private innerOptions;
    private innerValue;
    private optionsCollectionSubscription;
    element: HTMLElement;
    constructor(element: Element, resources: ViewResources, styleEngine: StyleEngine, bindingEngine: BindingEngine);
    created(_: any, myView: View): void;
    bind(): void;
    attached(): void;
    detached(): void;
    unbind(): void;
    themeChanged(newValue: any): void;
    optionsChanged(newValue: any[]): void;
    private optionsCollectionChanged;
    valueChanged(newValue: any): void;
    protected innerValueChanged(newValue: any): void;
    private addOption(option);
    private removeOption(option);
    select(option: any): void;
    protected inputClick(): boolean;
    protected selectBlur(): void;
}
